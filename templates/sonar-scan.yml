parameters:
  action: ''
  sonarOrganization: ''
  sonarProjectKey: ''
  sonarProjectName: ''
  sonarConnectionName: ''
  reportPaths: ''
  exclusions: ''
  targetBranch: 'master'
  buildReason: 'PullRequest'
    
steps:

- ${{ if eq(parameters.action, 'prepare') }}:
  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis'
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.Reason'], '${{ parameters.buildReason }}'),
        eq(variables['System.PullRequest.TargetBranch'], '${{ parameters.targetBranch }}')
      )
    inputs:
      SonarCloud: '${{ parameters.sonarConnectionName }}'
      organization: '${{ parameters.sonarOrganization }}'
      projectKey: '${{ parameters.sonarProjectKey }}'
      projectName: '${{ parameters.sonarProjectName }}'
      projectVersion: '$(Build.BuildNumber)'
      extraProperties: |
        sonar.cs.opencover.reportPaths=${{ parameters.reportPaths }}
        sonar.exclusions=${{ parameters.exclusions }}

- ${{ if eq(parameters.action, 'analyzeAndPublish') }}:
  - task: SonarCloudAnalyze@1
    displayName: 'Run SonarCloud code analysis'
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.Reason'], '${{ parameters.buildReason }}'),
        eq(variables['System.PullRequest.TargetBranch'], '${{ parameters.targetBranch }}')
      )

  - task: SonarCloudPublish@1
    displayName: 'Publish SonarCloud quality gate results'
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.Reason'], '${{ parameters.buildReason }}'),
        eq(variables['System.PullRequest.TargetBranch'], '${{ parameters.targetBranch }}')
      )

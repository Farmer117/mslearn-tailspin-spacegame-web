trigger:
  branches:
    include:
    - '*'     #build for all branches
  paths:
    exclude:
    - docs/*  #exclude any files within docs folder
              #by default, a build is triggered when a change is pushed to any file on any branch
              #with this, its the same, except for changes made to files inside the docs folder.
pool:
  vmImage: 'ubuntu-16.04'
  demands:
    - npm
  
variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'
  
steps:
  #.NET Core SDK install
  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'
  
  #npm install 
  - task: Npm@1
    displayName: 'Run npm install'
    inputs:
      verbose: false
  
  #node-sass
  - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
    displayName: 'Compile Sass assets'
  
  #gulp
  - task: gulp@1
    displayName: 'Run gulp tasks'
  
  #echo
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: 'Write build info'
    workingDirectory: $(wwwrootDir)
  
  #restore
  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
  
  #build
  - task: DotNetCoreCLI@2
    displayName: 'Build the project - $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--no-restore --configuration $(buildConfiguration)'
      projects: '**/*.csproj'
  
  #publish
  - task: DotNetCoreCLI@2
    displayName: 'Publish the project - $(buildConfiguration)'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      zipAfterPublish: true
  
  #publish built artifact
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: succeeded()
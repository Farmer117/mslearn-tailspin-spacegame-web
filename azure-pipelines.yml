parameters:
- name: myCliente
  displayName: Nome da conta do Cliente
  type: string
  default:

- name: myEmail
  displayName: Email da conta do Cliente
  type: string
  default:


trigger: none


stages:
  stage:
    steps:
      - bash:
          echo ${{parameters.myCliente}}
          echo ${{parameters.myEmail}}
      - task: TerraformInstaller@1
        displayName: install terraform
        inputs:
          terraformVersion: latest

      - task: TerraformCLI@0
        displayName: 'check terraform version'
        inputs:
        command: version

      - task: TerraformCLI@0
        displayName: 'terraform init'
        inputs:
          provider: 'aws'
          command: init
        env:
          AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
          AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"

      - task: TerraformCLI@0
        condition: manual()
        displayName: 'terraform plan'
        inputs:
          command: plan
          commandOptions: '-var cliente=${{parameters.myCliente}} -var email=${{parameters.myEmail}}'
        env:
          AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
          AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"

 # - stage:
 #   - task: TerraformCLI@0
 #     displayName: 'terraform apply'
 #     inputs:
 #      command: apply
 #      commandOptions: '-var cliente=${{parameters.myCliente}} -var email=${{parameters.myEmail}}'
 #     env:
 #      AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
 #      AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"


#jobs:
#- job: build
#  displayName: build
#  pool:
#    vmImage: ubuntu-latest
#  steps:
#  - script: echo building $(Build.BuildNumber) with ${{ parameters.myString }} in commit $(BUILD.SOURCEVERSIONMESSAGE)

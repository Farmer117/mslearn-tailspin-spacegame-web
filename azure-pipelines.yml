# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

  trigger:
  - '*'

  # pool:
  #   vmImage: 'ubuntu-20.04'
  #   demands:
  #   - npm

  pool:
    name: Default
    demands:
     - agent.name -equals MySelfHosted
     - npm  

  
  variables:
    buildConfiguration: 'Release'
    wwwroofDir: 'Tailspin.SpaceGame.Web/wwwroot'
    dotnetSdkVersion: '6.x'

  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'

  # - task: Npm@1
  #   displayName: 'Run npm install'
  #   inputs:
  #     verbose: false

  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: 'Write Build Info'
    workingDirectory: $(wwwrootDir)

  - task: DotNetCoreCLI@2
    displayName: 'Restoremproject dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build the project - $(buildConfigurstion)'
    inputs:
      command: 'build'
      arguments: '--no-restore --configuration $(buildConfigurstion)'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Publish the project - $(buildConfigurstion)'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration $(buildConfigurstion) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: succeeded()
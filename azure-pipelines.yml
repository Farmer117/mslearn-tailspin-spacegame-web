# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
#- main
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'

steps:
- task: UseDotNet@2
  #displayName: 'Use .NET SDK 5.x'
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

#- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'
    
- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# - task: dotnetcorecli@2
#   displayname: 'build the project - $(buildconfiguration)'
#   inputs:
#     command: 'build'
#     arguments: '--no-restore --configuration $(buildconfiguration)'
#     projects: '**/*.csproj'

# - task: dotnetcorecli@2
#   displayname: 'publish the project - $(buildconfiguration)'
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishwebprojects: false
#     arguments: '--no-build --configuration $(buildconfiguration) --output $(build.artifactstagingdirectory)/$(buildconfiguration)'
#     zipafterpublish: true 

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()